trigger:
- master

phases:
- template: /eng/common/templates/phases/base.yml
  parameters:
    name: Windows_NT
    enableTelemetry: true
    enableMicrobuild: true
    publicBuildReasons: PullRequest
    queue: dotnet-internal-temp
    timeoutInMinutes: 360
    variables:
      BuildConfiguration: 'Release'
      TeamName: MSBuild
      _HelixType: build/product
      _HelixBuildConfig: $(BuildConfiguration)
      _HelixSource: official/dotnet/cli/$(Build.SourceBranch)
      _PublishArgs: /p:DotNetPublishBlobFeedKey=$(dotnetfeed-storage-access-key-1)
                /p:DotNetPublishBlobFeedUrl=https://dotnetfeed.blob.core.windows.net/dotnet-core/index.json
                /p:DotNetPublishToBlobFeed=true
                /p:DotNetSymbolServerTokenMsdl=$(microsoft-symbol-server-pat)
                /p:DotNetSymbolServerTokenSymWeb=$(symweb-symbol-server-pat)
                /p:PB_PublishType=blob
      _SignArgs: /p:DotNetSignType=real /p:TeamName=MSBuild

    steps:
    - task: AzureKeyVault@1
      inputs:
        azureSubscription: 'DotNet-Engineering-Services_KeyVault'
        KeyVaultName: EngKeyVault
        SecretsFilter: 'dotnetfeed-storage-access-key-1,microsoft-symbol-server-pat,symweb-symbol-server-pat'
      condition: succeeded()
    - task: AzureKeyVault@1
      inputs:
        azureSubscription: 'HelixProd_KeyVault'
        KeyVaultName: HelixProdKV
        SecretsFilter: 'HelixApiAccessToken'
      condition: always()

    - task: CmdLine@1
      displayName: Print Vars
      inputs:
        filename: set
      condition: always()

    - task: CmdLine@1
      displayName: Run build.cmd
      inputs:
        filename: '$(comspec)'
        arguments: '/c "call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\Common7\Tools\VsDevCmd.bat" & $(Build.Repository.LocalPath)\eng\common\cibuild.cmd -configuration $(BuildConfiguration) /p:Projects=$(Build.Repository.LocalPath)\MSBuild.sln $(_PublishArgs) $(_SignArgs)"'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: logs'
      inputs:
        PathtoPublish: 'artifacts\log\$(BuildConfiguration)'
        ArtifactName: logs
      condition: succeededOrFailed()

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: packages'
      inputs:
        PathtoPublish: 'artifacts\packages\$(BuildConfiguration)\*Shipping\*.nupkg'
        ArtifactName: packages
      condition: succeededOrFailed()

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: vsix'
      inputs:
        PathtoPublish: 'artifacts\VSSetup\$(BuildConfiguration)\Insertion'
        ArtifactName: vsix
      condition: succeededOrFailed()

    - task: ms-vseng.MicroBuildTasks.4305a8de-ba66-4d8b-b2d1-0dc4ecbbf5e8.MicroBuildUploadVstsDropFolder@1
      displayName: Upload VSTS Drop
      inputs:
        DropFolder: 'artifacts\VSSetup\$(BuildConfiguration)\Insertion'

    - task: PowerShell@1
      displayName: Microbuild health checks
      inputs:
        scriptName: 'eng/MicrobuildTest.ps1'
      enabled: false
      continueOnError: true

    - task: ms-vseng.MicroBuildTasks.521a94ea-9e68-468a-8167-6dcf361ea776.MicroBuildCleanup@1
      displayName: Execute cleanup tasks

- ${{ if and(ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:
  - template: /eng/common/templates/phases/publish-build-assets.yml
    parameters:
      dependsOn:
        - Windows_NT
      queue:
        name: Hosted VS2017
