<Project>

  <!-- Import parent targets -->
  <Import Project="..\Directory.Build.targets"/>

  <PropertyGroup>
    <PackageLicenseUrl>http://go.microsoft.com/fwlink/?LinkId=329770</PackageLicenseUrl>
    <PackageProjectUrl>http://go.microsoft.com/fwlink/?LinkId=624683</PackageProjectUrl>
    <PackageIconUrl>https://go.microsoft.com/fwlink/?linkid=825694</PackageIconUrl>
  </PropertyGroup>
  
  <Target Name="GetNuGetPackageVersionEx" AfterTargets="GetBuildVersion">

    <!--
    This target is used to customize the versions generated by NerdBank.GitVersioning.  The $(PrereleaseVersion) is read from version.json and
    then the git commit height and build revision is appended.
    -->
    <PropertyGroup Condition=" '$(PrereleaseVersion)' != '' ">
      <BuildNumber>0</BuildNumber>
      <!-- Local builds always have a revision of -private -->
      <BuildRevision Condition="'$(BUILD_BUILDNUMBER)' == ''">private</BuildRevision>

      <!-- Official builds have an ID that is guaranteed to be unique. -->
      <BuildRevision Condition="'$(BUILD_BUILDNUMBER)' != ''">$(BUILD_BUILDNUMBER)</BuildRevision>

      <PrereleaseVersion Condition="'$(PrereleaseVersion)' != '' And '$(BuildVersionNumberComponent)' != ''">$(PrereleaseVersion)-$([System.Int32]::Parse($(BuildVersionNumberComponent)).ToString('D6'))-$(BuildRevision)</PrereleaseVersion>

      <!-- Override the NuGet package version provided by Nerdbank.GitVersioning -->
      <PackageVersion>$(MajorMinorVersion).$(BuildNumber)$(PrereleaseVersion)</PackageVersion>
    </PropertyGroup>

    <PropertyGroup Condition=" '$(PrereleaseVersion)' == '' ">
      <PackageVersion>$(MajorMinorVersion).$(BuildNumber)</PackageVersion>
    </PropertyGroup>
  </Target>
  
</Project>
